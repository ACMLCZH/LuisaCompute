name: build-wheels

on:
  push:
    branches:
      - 'stable'
  pull_request:
    branches:
      - 'stable'

env:
  CIBW_ARCHS: auto64
  CIBW_BUILD_VERBOSITY: 2

jobs:
  build-linux:
    name: ubuntu-22.04
    runs-on: [ self-hosted, x64, linux ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: "Build Wheels"
        env:
          CIBW_BUILD: \*manylinux\*
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_BEFORE_ALL: "./scripts/cibw_install_deps.sh"
          CIBW_REPAIR_WHEEL_COMMAND: "auditwheel show {wheel} && auditwheel repair -w {dest_dir} {wheel} --exclude libcuda.so.1 --exclude libvulkan.so.1"
        run: |
          apt install -y python3 python3-pip python3-venv
          python -m pip install -U cibuildwheel
          python -m cibuildwheel --output-dir wheelhouse
      - name: "Upload Wheels"
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build-macos:
    strategy:
      fail-fast: false
      matrix:
        runner:
          - { os: macos-14, arch: x64 }
          - { os: macos, arch: self-hosted }
    name: "${{ matrix.runner.os }}-${{ matrix.runner.arch }}"
    runs-on: [ "${{ matrix.runner.os }}", "${{ matrix.runner.arch }}" ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: "Install Rust"
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - name: "Setup LLVM"
        run: |
          brew install --overwrite python@3.12
          brew install --overwrite llvm molten-vk
      - name: "Build Wheels"
        run: |
          export PATH="/usr/local/opt/llvm/bin:$PATH"
          export CC=clang
          export CXX=clang++
          python3 -m pip install -U cibuildwheel
          for dep_target in 13.0; do
            export MACOSX_DEPLOYMENT_TARGET=${dep_target}
            python3 -m cibuildwheel --output-dir wheelhouse
          done
      - name: "Upload Wheels"
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build-windows:
    name: windows-2022
    runs-on: [ self-hosted, windows, x64 ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: "Setup Ninja"
        uses: ashutoshvarma/setup-ninja@master
        with:
          version: 1.11.1
      - name: "Build Wheels"
        shell: cmd
        env:
          CIBW_BEFORE_ALL: call "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat" && set CC=cl && set CXX=cl
        run: |
          python -m pip install -U cibuildwheel
          python -m cibuildwheel --output-dir wheelhouse
      - name: "Upload Wheels"
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
