//
// Created by Mike Smith on 2021/2/22.
//

#pragma once

#include <array>
#include <core/stl/memory.h>
#include <core/macro.h>
#include <ast/type.h>

namespace luisa::compute {

template<typename T>
class Buffer;

template<typename T>
class BufferView;

template<typename T>
class Image;

template<typename T>
class ImageView;

template<typename T>
class Volume;

template<typename T>
class VolumeView;

class BindlessArray;
class Accel;

namespace detail {

// TODO: is it possible to make the following functions constexpr?
[[nodiscard]] LC_AST_API luisa::string make_array_description(luisa::string_view elem, size_t dim) noexcept;
[[nodiscard]] LC_AST_API luisa::string make_struct_description(size_t alignment, std::initializer_list<luisa::string_view> members) noexcept;
[[nodiscard]] LC_AST_API luisa::string make_buffer_description(luisa::string_view elem) noexcept;
struct AnyType {
    template<typename T>
    operator T();
};


template<typename T>
consteval size_t count_member() {
    // clang-format off
if constexpr(requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
    static_assert(luisa::always_false_v<T>, "Struct member count must less than 64.");
}
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{}};}){ 
if constexpr(!requires{T{{},{},{},{}};}){ 
if constexpr(!requires{T{{},{}};}){ 
return 1;
}else{
if constexpr(!requires{T{{},{},{}};}){ 
return 2;
}else{
return 3;
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{}};}){ 
if constexpr(!requires{T{{},{},{},{},{}};}){ 
return 4;
}else{
return 5;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{}};}){
return 6;
}else{
return 7;
}
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{}};}){
return 8;
}else{
return 9;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{}};}){
return 10;
}else{
return 11;
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 12;
}else{
return 13;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 14;
}else{
return 15;
}
}
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 16;
}else{
return 17;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 18;
}else{
return 19;
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 20;
}else{
return 21;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 22;
}else{
return 23;
}
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 24;
}else{
return 25;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 26;
}else{
return 27;
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 28;
}else{
return 29;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 30;
}else{
return 31;
}
}
}
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 32;
}else{
return 33;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 34;
}else{
return 35;
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 36;
}else{
return 37;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 38;
}else{
return 39;
}
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 40;
}else{
return 41;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 42;
}else{
return 43;
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 44;
}else{
return 45;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 46;
}else{
return 47;
}
}
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 48;
}else{
return 49;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 50;
}else{
return 51;
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 52;
}else{
return 53;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 54;
}else{
return 55;
}
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 56;
}else{
return 57;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 58;
}else{
return 59;
}
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 60;
}else{
return 61;
}
}else{
if constexpr(!requires{T{{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}};}){
return 62;
}else{
return 63;
}
}
}
}
}
}
    // clang-format on
}
template<typename T>
luisa::string member_reflect();
template<typename T>
struct TypeDesc {
    static luisa::string_view description() noexcept {
        static thread_local luisa::string desc = member_reflect<T>();
        return desc;
    }
};

// scalar
#define LUISA_MAKE_SCALAR_AND_VECTOR_TYPE_DESC_SPECIALIZATION(S, tag) \
    template<>                                                        \
    struct TypeDesc<S> {                                              \
        static constexpr luisa::string_view description() noexcept {  \
            using namespace std::string_view_literals;                \
            return #S##sv;                                            \
        }                                                             \
    };                                                                \
    template<>                                                        \
    struct TypeDesc<Vector<S, 2>> {                                   \
        static constexpr luisa::string_view description() noexcept {  \
            using namespace std::string_view_literals;                \
            return "vector<" #S ",2>"sv;                              \
        }                                                             \
    };                                                                \
    template<>                                                        \
    struct TypeDesc<Vector<S, 3>> {                                   \
        static constexpr luisa::string_view description() noexcept {  \
            using namespace std::string_view_literals;                \
            return "vector<" #S ",3>"sv;                              \
        }                                                             \
    };                                                                \
    template<>                                                        \
    struct TypeDesc<Vector<S, 4>> {                                   \
        static constexpr luisa::string_view description() noexcept {  \
            using namespace std::string_view_literals;                \
            return "vector<" #S ",4>"sv;                              \
        }                                                             \
    };

LUISA_MAKE_SCALAR_AND_VECTOR_TYPE_DESC_SPECIALIZATION(bool, BOOL)
LUISA_MAKE_SCALAR_AND_VECTOR_TYPE_DESC_SPECIALIZATION(float, FLOAT)
LUISA_MAKE_SCALAR_AND_VECTOR_TYPE_DESC_SPECIALIZATION(int, INT32)
LUISA_MAKE_SCALAR_AND_VECTOR_TYPE_DESC_SPECIALIZATION(uint, UINT32)

#undef LUISA_MAKE_SCALAR_AND_VECTOR_TYPE_DESC_SPECIALIZATION

// array
template<typename T, size_t N>
struct TypeDesc<std::array<T, N>> {
    static_assert(alignof(T) >= 4u);
    static luisa::string_view description() noexcept {
        static thread_local auto s = make_array_description(
            TypeDesc<T>::description(), N);
        return s;
    }
};

template<typename T, size_t N>
struct TypeDesc<T[N]> {
    static luisa::string_view description() noexcept {
        static thread_local auto s = make_array_description(
            TypeDesc<T>::description(), N);
        return s;
    }
};

template<typename T>
struct TypeDesc<Buffer<T>> {
    static luisa::string_view description() noexcept {
        static thread_local auto s = make_buffer_description(
            TypeDesc<T>::description());
        return s;
    }
};

template<typename T>
struct TypeDesc<BufferView<T>> : TypeDesc<Buffer<T>> {};

template<>
struct TypeDesc<Image<float>> {
    static constexpr luisa::string_view description() noexcept {
        return "texture<2,float>";
    }
};

template<>
struct TypeDesc<Image<int>> {
    static constexpr luisa::string_view description() noexcept {
        return "texture<2,int>";
    }
};

template<>
struct TypeDesc<Image<uint>> {
    static constexpr luisa::string_view description() noexcept {
        return "texture<2,uint>";
    }
};

template<typename T>
struct TypeDesc<ImageView<T>> : TypeDesc<Image<T>> {};

template<>
struct TypeDesc<Volume<float>> {
    static constexpr luisa::string_view description() noexcept {
        return "texture<3,float>";
    }
};

template<>
struct TypeDesc<Volume<int>> {
    static constexpr luisa::string_view description() noexcept {
        return "texture<3,int>";
    }
};

template<>
struct TypeDesc<Volume<uint>> {
    static constexpr luisa::string_view description() noexcept {
        return "texture<3,uint>";
    }
};

template<>
struct TypeDesc<BindlessArray> {
    static constexpr luisa::string_view description() noexcept {
        return "bindless_array";
    }
};

template<>
struct TypeDesc<Accel> {
    static constexpr luisa::string_view description() noexcept {
        return "accel";
    }
};

template<typename T>
struct TypeDesc<VolumeView<T>> : TypeDesc<Volume<T>> {};

// matrices
template<>
struct TypeDesc<float2x2> {
    static constexpr luisa::string_view description() noexcept {
        using namespace std::string_view_literals;
        return "matrix<2>"sv;
    }
};

template<>
struct TypeDesc<float3x3> {
    static constexpr luisa::string_view description() noexcept {
        using namespace std::string_view_literals;
        return "matrix<3>"sv;
    }
};

template<>
struct TypeDesc<float4x4> {
    static constexpr luisa::string_view description() noexcept {
        using namespace std::string_view_literals;
        return "matrix<4>"sv;
    }
};

template<typename... T>
struct TypeDesc<std::tuple<T...>> {
    static luisa::string_view description() noexcept {
        auto alignment = std::max({alignof(T)...});
        static thread_local auto s = make_struct_description(
            alignment, {TypeDesc<T>::description()...});
        return s;
    }
};

}// namespace detail

template<typename T>
const Type *Type::of() noexcept {
    if constexpr (std::is_same_v<T, void>) {
        return nullptr;
    } else {
        auto desc = detail::TypeDesc<std::remove_cvref_t<T>>::description();
        if constexpr (is_custom_struct_v<T>) {
            static thread_local auto t = Type::custom(desc);
            return t;
        } else {
            static thread_local auto t = Type::from(desc);
            return t;
        }
    }
}

namespace detail {

template<typename S, typename Members, typename offsets>
struct is_valid_reflection : std::false_type {};

template<typename S, typename... M, typename O, O... os>
struct is_valid_reflection<S, std::tuple<M...>, std::integer_sequence<O, os...>> {

    static_assert(((!is_struct_v<M> || alignof(M) >= 4u) && ...));
    static_assert((!is_bool_vector_v<M> && ...),
                  "Boolean vectors are not allowed in DSL "
                  "structures since their may have different "
                  "layouts on different platforms.");

private:
    [[nodiscard]] constexpr static auto _check() noexcept {
        constexpr auto count = sizeof...(M);
        static_assert(sizeof...(os) == count);
        constexpr std::array<size_t, count> sizes{sizeof(M)...};
        constexpr std::array<size_t, count> alignments{alignof(M)...};
        constexpr std::array<size_t, count> offsets{os...};
        auto current_offset = 0u;
        for (auto i = 0u; i < count; i++) {
            auto offset = offsets[i];
            auto size = sizes[i];
            auto alignment = alignments[i];
            current_offset = (current_offset + alignment - 1u) /
                             alignment *
                             alignment;
            if (current_offset != offset) { return false; }
            current_offset += size;
        }
        constexpr auto struct_size = sizeof(S);
        constexpr auto struct_alignment = alignof(S);
        current_offset = (current_offset + struct_alignment - 1u) /
                         struct_alignment *
                         struct_alignment;
        return current_offset == struct_size;
    };

public:
    static constexpr auto value = _check();
};

template<typename S, typename M, typename O>
constexpr auto is_valid_reflection_v = is_valid_reflection<S, M, O>::value;
template<typename T>
luisa::string member_reflect() {
    luisa::string str = "struct<";
    str.append(std::to_string(alignof(T))).append(",");
    constexpr size_t i = count_member<T>();
    // clang-format off
if constexpr(i == 1){ auto [a0] = T{}; str.append(TypeDesc<decltype(a0)>::description());}
else if constexpr(i == 2){ auto [a0,a1] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description());}
else if constexpr(i == 3){ auto [a0,a1,a2] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description());}
else if constexpr(i == 4){ auto [a0,a1,a2,a3] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description());}
else if constexpr(i == 5){ auto [a0,a1,a2,a3,a4] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description());}
else if constexpr(i == 6){ auto [a0,a1,a2,a3,a4,a5] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description());}
else if constexpr(i == 7){ auto [a0,a1,a2,a3,a4,a5,a6] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description());}
else if constexpr(i == 8){ auto [a0,a1,a2,a3,a4,a5,a6,a7] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description());}
else if constexpr(i == 9){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description());}
else if constexpr(i == 10){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description());}
else if constexpr(i == 11){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description());}
else if constexpr(i == 12){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description());}
else if constexpr(i == 13){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description());}
else if constexpr(i == 14){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description());}
else if constexpr(i == 15){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description());}
else if constexpr(i == 16){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description());}
else if constexpr(i == 17){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description());}
else if constexpr(i == 18){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description());}
else if constexpr(i == 19){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description());}
else if constexpr(i == 20){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description());}
else if constexpr(i == 21){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description());}
else if constexpr(i == 22){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description());}
else if constexpr(i == 23){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description());}
else if constexpr(i == 24){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description());}
else if constexpr(i == 25){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description());}
else if constexpr(i == 26){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description());}
else if constexpr(i == 27){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description());}
else if constexpr(i == 28){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description());}
else if constexpr(i == 29){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description());}        
else if constexpr(i == 30){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description());}
else if constexpr(i == 31){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description());}
else if constexpr(i == 32){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description());}
else if constexpr(i == 33){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description());}
else if constexpr(i == 34){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description());}
else if constexpr(i == 35){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description());}else if constexpr(i == 36){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description());}
else if constexpr(i == 37){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description());}
else if constexpr(i == 38){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description());}
else if constexpr(i == 39){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description());}
else if constexpr(i == 40){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description());}
else if constexpr(i == 41){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description());}
else if constexpr(i == 42){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description());}
else if constexpr(i == 43){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description());}
else if constexpr(i == 44){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description());}
else if constexpr(i == 45){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description());}
else if constexpr(i == 46){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description());}
else if constexpr(i == 47){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description());}
else if constexpr(i == 48){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description());}
else if constexpr(i == 49){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description());}
else if constexpr(i == 50){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description());}
else if constexpr(i == 51){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description()).append(",").append(TypeDesc<decltype(a50)>::description());}
else if constexpr(i == 52){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description()).append(",").append(TypeDesc<decltype(a50)>::description()).append(",").append(TypeDesc<decltype(a51)>::description());}
else if constexpr(i == 53){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description()).append(",").append(TypeDesc<decltype(a50)>::description()).append(",").append(TypeDesc<decltype(a51)>::description()).append(",").append(TypeDesc<decltype(a52)>::description());}
else if constexpr(i == 54){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description()).append(",").append(TypeDesc<decltype(a50)>::description()).append(",").append(TypeDesc<decltype(a51)>::description()).append(",").append(TypeDesc<decltype(a52)>::description()).append(",").append(TypeDesc<decltype(a53)>::description());}
else if constexpr(i == 55){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53,a54] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description()).append(",").append(TypeDesc<decltype(a50)>::description()).append(",").append(TypeDesc<decltype(a51)>::description()).append(",").append(TypeDesc<decltype(a52)>::description()).append(",").append(TypeDesc<decltype(a53)>::description()).append(",").append(TypeDesc<decltype(a54)>::description());}
else if constexpr(i == 56){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53,a54,a55] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description()).append(",").append(TypeDesc<decltype(a50)>::description()).append(",").append(TypeDesc<decltype(a51)>::description()).append(",").append(TypeDesc<decltype(a52)>::description()).append(",").append(TypeDesc<decltype(a53)>::description()).append(",").append(TypeDesc<decltype(a54)>::description()).append(",").append(TypeDesc<decltype(a55)>::description());}
else if constexpr(i == 57){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53,a54,a55,a56] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description()).append(",").append(TypeDesc<decltype(a50)>::description()).append(",").append(TypeDesc<decltype(a51)>::description()).append(",").append(TypeDesc<decltype(a52)>::description()).append(",").append(TypeDesc<decltype(a53)>::description()).append(",").append(TypeDesc<decltype(a54)>::description()).append(",").append(TypeDesc<decltype(a55)>::description()).append(",").append(TypeDesc<decltype(a56)>::description());}
else if constexpr(i == 58){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53,a54,a55,a56,a57] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description()).append(",").append(TypeDesc<decltype(a50)>::description()).append(",").append(TypeDesc<decltype(a51)>::description()).append(",").append(TypeDesc<decltype(a52)>::description()).append(",").append(TypeDesc<decltype(a53)>::description()).append(",").append(TypeDesc<decltype(a54)>::description()).append(",").append(TypeDesc<decltype(a55)>::description()).append(",").append(TypeDesc<decltype(a56)>::description()).append(",").append(TypeDesc<decltype(a57)>::description());}
else if constexpr(i == 59){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53,a54,a55,a56,a57,a58] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description()).append(",").append(TypeDesc<decltype(a50)>::description()).append(",").append(TypeDesc<decltype(a51)>::description()).append(",").append(TypeDesc<decltype(a52)>::description()).append(",").append(TypeDesc<decltype(a53)>::description()).append(",").append(TypeDesc<decltype(a54)>::description()).append(",").append(TypeDesc<decltype(a55)>::description()).append(",").append(TypeDesc<decltype(a56)>::description()).append(",").append(TypeDesc<decltype(a57)>::description()).append(",").append(TypeDesc<decltype(a58)>::description());}
else if constexpr(i == 60){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53,a54,a55,a56,a57,a58,a59] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description()).append(",").append(TypeDesc<decltype(a50)>::description()).append(",").append(TypeDesc<decltype(a51)>::description()).append(",").append(TypeDesc<decltype(a52)>::description()).append(",").append(TypeDesc<decltype(a53)>::description()).append(",").append(TypeDesc<decltype(a54)>::description()).append(",").append(TypeDesc<decltype(a55)>::description()).append(",").append(TypeDesc<decltype(a56)>::description()).append(",").append(TypeDesc<decltype(a57)>::description()).append(",").append(TypeDesc<decltype(a58)>::description()).append(",").append(TypeDesc<decltype(a59)>::description());}
else if constexpr(i == 61){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53,a54,a55,a56,a57,a58,a59,a60] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description()).append(",").append(TypeDesc<decltype(a50)>::description()).append(",").append(TypeDesc<decltype(a51)>::description()).append(",").append(TypeDesc<decltype(a52)>::description()).append(",").append(TypeDesc<decltype(a53)>::description()).append(",").append(TypeDesc<decltype(a54)>::description()).append(",").append(TypeDesc<decltype(a55)>::description()).append(",").append(TypeDesc<decltype(a56)>::description()).append(",").append(TypeDesc<decltype(a57)>::description()).append(",").append(TypeDesc<decltype(a58)>::description()).append(",").append(TypeDesc<decltype(a59)>::description()).append(",").append(TypeDesc<decltype(a60)>::description());}
else if constexpr(i == 62){ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53,a54,a55,a56,a57,a58,a59,a60,a61] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description()).append(",").append(TypeDesc<decltype(a50)>::description()).append(",").append(TypeDesc<decltype(a51)>::description()).append(",").append(TypeDesc<decltype(a52)>::description()).append(",").append(TypeDesc<decltype(a53)>::description()).append(",").append(TypeDesc<decltype(a54)>::description()).append(",").append(TypeDesc<decltype(a55)>::description()).append(",").append(TypeDesc<decltype(a56)>::description()).append(",").append(TypeDesc<decltype(a57)>::description()).append(",").append(TypeDesc<decltype(a58)>::description()).append(",").append(TypeDesc<decltype(a59)>::description()).append(",").append(TypeDesc<decltype(a60)>::description()).append(",").append(TypeDesc<decltype(a61)>::description());}
else{ auto [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53,a54,a55,a56,a57,a58,a59,a60,a61,a62] = T{}; str.append(TypeDesc<decltype(a0)>::description()).append(",").append(TypeDesc<decltype(a1)>::description()).append(",").append(TypeDesc<decltype(a2)>::description()).append(",").append(TypeDesc<decltype(a3)>::description()).append(",").append(TypeDesc<decltype(a4)>::description()).append(",").append(TypeDesc<decltype(a5)>::description()).append(",").append(TypeDesc<decltype(a6)>::description()).append(",").append(TypeDesc<decltype(a7)>::description()).append(",").append(TypeDesc<decltype(a8)>::description()).append(",").append(TypeDesc<decltype(a9)>::description()).append(",").append(TypeDesc<decltype(a10)>::description()).append(",").append(TypeDesc<decltype(a11)>::description()).append(",").append(TypeDesc<decltype(a12)>::description()).append(",").append(TypeDesc<decltype(a13)>::description()).append(",").append(TypeDesc<decltype(a14)>::description()).append(",").append(TypeDesc<decltype(a15)>::description()).append(",").append(TypeDesc<decltype(a16)>::description()).append(",").append(TypeDesc<decltype(a17)>::description()).append(",").append(TypeDesc<decltype(a18)>::description()).append(",").append(TypeDesc<decltype(a19)>::description()).append(",").append(TypeDesc<decltype(a20)>::description()).append(",").append(TypeDesc<decltype(a21)>::description()).append(",").append(TypeDesc<decltype(a22)>::description()).append(",").append(TypeDesc<decltype(a23)>::description()).append(",").append(TypeDesc<decltype(a24)>::description()).append(",").append(TypeDesc<decltype(a25)>::description()).append(",").append(TypeDesc<decltype(a26)>::description()).append(",").append(TypeDesc<decltype(a27)>::description()).append(",").append(TypeDesc<decltype(a28)>::description()).append(",").append(TypeDesc<decltype(a29)>::description()).append(",").append(TypeDesc<decltype(a30)>::description()).append(",").append(TypeDesc<decltype(a31)>::description()).append(",").append(TypeDesc<decltype(a32)>::description()).append(",").append(TypeDesc<decltype(a33)>::description()).append(",").append(TypeDesc<decltype(a34)>::description()).append(",").append(TypeDesc<decltype(a35)>::description()).append(",").append(TypeDesc<decltype(a36)>::description()).append(",").append(TypeDesc<decltype(a37)>::description()).append(",").append(TypeDesc<decltype(a38)>::description()).append(",").append(TypeDesc<decltype(a39)>::description()).append(",").append(TypeDesc<decltype(a40)>::description()).append(",").append(TypeDesc<decltype(a41)>::description()).append(",").append(TypeDesc<decltype(a42)>::description()).append(",").append(TypeDesc<decltype(a43)>::description()).append(",").append(TypeDesc<decltype(a44)>::description()).append(",").append(TypeDesc<decltype(a45)>::description()).append(",").append(TypeDesc<decltype(a46)>::description()).append(",").append(TypeDesc<decltype(a47)>::description()).append(",").append(TypeDesc<decltype(a48)>::description()).append(",").append(TypeDesc<decltype(a49)>::description()).append(",").append(TypeDesc<decltype(a50)>::description()).append(",").append(TypeDesc<decltype(a51)>::description()).append(",").append(TypeDesc<decltype(a52)>::description()).append(",").append(TypeDesc<decltype(a53)>::description()).append(",").append(TypeDesc<decltype(a54)>::description()).append(",").append(TypeDesc<decltype(a55)>::description()).append(",").append(TypeDesc<decltype(a56)>::description()).append(",").append(TypeDesc<decltype(a57)>::description()).append(",").append(TypeDesc<decltype(a58)>::description()).append(",").append(TypeDesc<decltype(a59)>::description()).append(",").append(TypeDesc<decltype(a60)>::description()).append(",").append(TypeDesc<decltype(a61)>::description()).append(",").append(TypeDesc<decltype(a62)>::description());}
str.append(">");
return str;
    // clang-format on
}
}// namespace detail

}// namespace luisa::compute

// struct
#define LUISA_STRUCTURE_MAP_MEMBER_TO_DESC(m) \
    luisa::compute::detail::TypeDesc<std::remove_cvref_t<decltype(std::declval<this_type>().m)>>::description()
#define LUISA_STRUCTURE_MAP_MEMBER_TO_TYPE(m) \
    std::remove_cvref_t<decltype(std::declval<this_type>().m)>

#ifdef _MSC_VER// force the built-in offsetof(), otherwise clangd would complain that it's not constant
#define LUISA_STRUCTURE_MAP_MEMBER_TO_OFFSET(m) \
    __builtin_offsetof(this_type, m)
#else
#define LUISA_STRUCTURE_MAP_MEMBER_TO_OFFSET(m) \
    offsetof(this_type, m)
#endif

#define LUISA_MAKE_STRUCTURE_TYPE_DESC_SPECIALIZATION(S, ...)                \
    template<>                                                               \
    struct luisa::compute::is_struct<S> : std::true_type {};                 \
    template<>                                                               \
    struct luisa::compute::struct_member_tuple<S> {                          \
        using this_type = S;                                                 \
        using type = std::tuple<                                             \
            LUISA_MAP_LIST(                                                  \
                LUISA_STRUCTURE_MAP_MEMBER_TO_TYPE,                          \
                ##__VA_ARGS__)>;                                             \
        using offset = std::integer_sequence<                                \
            size_t,                                                          \
            LUISA_MAP_LIST(                                                  \
                LUISA_STRUCTURE_MAP_MEMBER_TO_OFFSET,                        \
                ##__VA_ARGS__)>;                                             \
        static_assert(luisa::compute::detail::is_valid_reflection_v<         \
                      this_type, type, offset>);                             \
    };                                                                       \
    template<>                                                               \
    struct luisa::compute::detail::TypeDesc<S> {                             \
        using this_type = S;                                                 \
        static luisa::string_view description() noexcept {                   \
            static auto s = luisa::compute::detail::make_struct_description( \
                alignof(S),                                                  \
                {LUISA_MAP_LIST(LUISA_STRUCTURE_MAP_MEMBER_TO_DESC,          \
                                ##__VA_ARGS__)});                            \
            return s;                                                        \
        }                                                                    \
    };
#define LUISA_STRUCT_REFLECT(S, ...) \
    LUISA_MAKE_STRUCTURE_TYPE_DESC_SPECIALIZATION(S, __VA_ARGS__)

#define LUISA_CUSTOM_STRUCT_REFLECT(S, name)                         \
    template<>                                                       \
    struct luisa::compute::is_struct<S> : std::true_type {};         \
    template<>                                                       \
    struct luisa::compute::is_custom_struct<S> : std::true_type {};  \
    template<>                                                       \
    struct luisa::compute::detail::TypeDesc<S> {                     \
        using this_type = S;                                         \
        static constexpr luisa::string_view description() noexcept { \
            return name;                                             \
        }                                                            \
    };
