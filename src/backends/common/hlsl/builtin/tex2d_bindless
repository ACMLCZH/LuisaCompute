uint ReadBdlsTex2DNum(ByteAddressBuffer s,uint idx){
return s.Load(12*idx+4);
}
float4 SampleTex2DLevel(const ByteAddressBuffer arr,const uint index,const float2 uv,const float level){
uint num=ReadBdlsTex2DNum(arr,index);
SamplerState samp=samplers[NonUniformResourceIndex(ReadBdlsSmp(num))];
return _BindlessTex[NonUniformResourceIndex(ReadBdlsTex(num))].SampleLevel(samp,uv,level);
}
float4 SampleTex2D(const ByteAddressBuffer arr,const uint index,const float2 uv){
return SampleTex2DLevel(arr,index,uv,0);
}
float4 SampleTex2DGrad(const ByteAddressBuffer arr,const uint index,const float2 uv,const float2 dx,const float2 dy){
uint num=ReadBdlsTex2DNum(arr,index);
SamplerState samp=samplers[NonUniformResourceIndex(ReadBdlsSmp(num))];
return _BindlessTex[NonUniformResourceIndex(ReadBdlsTex(num))].SampleGrad(samp,uv,dx,dy);
}
#ifdef PS
float4 SampleTex2DPixel(const ByteAddressBuffer arr,const uint index,const float2 uv){
uint num=ReadBdlsTex2DNum(arr,index);
SamplerState samp=samplers[NonUniformResourceIndex(ReadBdlsSmp(num))];
return _BindlessTex[NonUniformResourceIndex(ReadBdlsTex(num))].Sample(samp,uv);
}
#endif
float4 ReadTex2DLevel(const ByteAddressBuffer arr,const uint index,const uint2 coord,const uint level){
uint num=ReadBdlsTex2DNum(arr,index);
return _BindlessTex[NonUniformResourceIndex(ReadBdlsTex(num))].Load(uint3(coord,level));
}
float4 ReadTex2D(const ByteAddressBuffer arr,const uint index,const uint2 coord){return ReadTex2DLevel(arr,index,coord,0);}
uint2 Tex2DSize(const ByteAddressBuffer arr,const uint index){
uint num=ReadBdlsTex2DNum(arr,index);
uint2 s;
uint mip;
_BindlessTex[NonUniformResourceIndex(ReadBdlsTex(num))].GetDimensions(0,s.x,s.y,mip);
return s;
}
uint2 Tex2DSizeLevel(const ByteAddressBuffer arr,const uint index,const uint level){
uint num=ReadBdlsTex2DNum(arr,index);
uint2 s;
uint mip;
_BindlessTex[NonUniformResourceIndex(ReadBdlsTex(num))].GetDimensions(level,s.x,s.y,mip);
return s;
}
